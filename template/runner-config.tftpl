concurrent = ${runners_concurrent}
check_interval = ${runners_check_interval}
sentry_dsn = "${sentry_dsn}"
log_format = "json"
listen_address = "${prometheus_listen_address}"

[[runners]]
  name = "${runners_name}"
  url = "${gitlab_url}"
  ${tls_ca_file}
  clone_url = "${gitlab_clone_url}"
  token = "${runners_token}"
  executor = "${runners_executor}"
  environment = ${runners_environment_vars}
  pre_build_script = ${runners_pre_build_script}
  post_build_script = ${runners_post_build_script}
  pre_clone_script = ${runners_pre_clone_script}
  request_concurrency = ${runners_request_concurrency}
  output_limit = ${runners_output_limit}
  limit = ${runners_limit}
  [runners.docker]
    tls_verify = false
    image = "${runners_image}"
    privileged = ${runners_privileged}
    disable_cache = ${runners_disable_cache}
    volumes = ["/cache"${runners_additional_volumes}]
    extra_hosts = ${jsonencode(runners_extra_hosts)}
    shm_size = ${runners_shm_size}
    pull_policy = ${runners_pull_policies}
    runtime = "${runners_docker_runtime}"
    helper_image = "${runners_helper_image}"
    wait_for_services_timeout = ${runners_wait_for_services_timeout}
    ${runners_docker_services}
  [runners.docker.tmpfs]
    ${runners_volumes_tmpfs}
  [runners.docker.services_tmpfs]
    ${runners_services_volumes_tmpfs}
  [runners.cache]
    Type = "s3"
    Shared = ${shared_cache}
    [runners.cache.s3]
      AuthenticationType = "${auth_type}"
      ServerAddress = "s3.amazonaws.com"
      BucketName = "${bucket_name}"
      BucketLocation = "${aws_region}"
      Insecure = false
  [runners.autoscaler]
    plugin = "fleeting-plugin-aws"
    capacity_per_instance = 1
    max_use_count = 1
    max_instances = 10

    [runners.autoscaler.plugin_config] 
      name             = "${autoscaling_group_name}"

    [runners.autoscaler.connector_config]
      username          = "ec2-user"
      use_external_addr = true

    [[runners.autoscaler.policy]]
      idle_count = 5
      idle_time = "20m0s"

${runners_machine_autoscaling}
